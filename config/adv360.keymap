/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/helper.h"

// Source desired key-position labels
#include "zmk-helpers/key-labels/adv360_custom.h"

// Source unicode-chars for desired languages
#include "zmk-helpers/unicode-chars/german.dtsi"

#define KEYS_LEFT 0 1 2 3 4 5 6 \
                  14 15 16 17 18 19 20 \
                  28 29 30 31 32 33 34 \
                  46 47 48 49 50 51 \
                  66 67 68 69 70

#define KEYS_RIGHT 7 8 9 10 11 12 13 \
                   21 22 23 24 25 26 27 \
                   39 40 41 42 43 44 45 \
                   60 61 62 63 64 65 \
                   77 78 79 80 81

#define THUMBS_LEFT 35 36 54 71 72 73

#define THUMBS_RIGHT 37 38 57 74 75 76

#define THUMBS THUMBS_LEFT THUMBS_RIGHT

&lt {
    quick-tap-ms = <300>;
    global-quick-tap;
};

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"


        hm_shift_l: homerow_mods_shift_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHIFT_L";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_RIGHT THUMBS>;
        };
        
        hm_ctrl_l: homerow_mods_ctrl_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_CTRL_L";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_RIGHT THUMBS>;
        };

        hm_alt_l: homerow_mods_alt_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_ALT_L";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_RIGHT THUMBS>;
        };

        hm_win_l: homerow_mods_win_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_WIN_L";
            #binding-cells = <2>;
            tapping-term-ms = <200>;  // Höher als für andere Mods
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <500>;
            hold-trigger-key-positions = <KEYS_RIGHT THUMBS>;
        };

        hm_shift_r: homerow_mods_shift_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHIFT_R";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_LEFT THUMBS>;
        };
        
        hm_ctrl_r: homerow_mods_ctrl_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_CTRL_R";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_LEFT THUMBS>;
        };

        hm_alt_r: homerow_mods_alt_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_ALT_R";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_LEFT THUMBS>;
        };

        hm_win_r: homerow_mods_win_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_WIN_R";
            #binding-cells = <2>;
            tapping-term-ms = <200>;  // Höher als für andere Mods
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <500>;
            hold-trigger-key-positions = <KEYS_LEFT THUMBS>;
        };
    };

    // Home row mods
    #define _F_SFT     &hm_shift_l   LSHFT   F  // Shift on index fingers
    #define _J_SFT     &hm_shift_r   RSHFT   J
    #define _D_CTRL    &hm_ctrl_l    LCTRL   D   // CTRL on middle fingers
    #define _K_CTRL    &hm_ctrl_r    RCTRL   K
    #define _S_ALT     &hm_alt_l     LALT    S  // ALT on index down
    #define _L_ALT     &hm_alt_r     RALT    L
    #define _A_WIN     &hm_win_l     LWIN    A   // WIN/GUI on ring finger
    #define _SEMI_WIN  &hm_win_r     RWIN    SEMI

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1          &kp N2          &kp N3       &kp N4            &kp N5  &tog 1                                                           &mo 3      &kp N6  &kp N7             &kp N8       &kp N9           &kp N0              &kp MINUS
&kp TAB    &kp Q           &kp W           &kp E        &kp R             &kp T   &none                                                            &none      &kp Y   &kp U              &kp I        &kp O            &kp P               &kp BSLH
&kp ESC    _A_WIN          _S_ALT          _D_CTRL      _F_SFT            &kp G   &none     &kp LCTRL  &kp LEFT_ALT      &kp RIGHT_GUI  &kp RCTRL  &none      &kp H   _J_SFT             _K_CTRL      _L_ALT           _SEMI_WIN           &kp SQT
&kp LSHFT  &kp Z           &kp X           &kp C        &kp V             &kp B                        &kp HOME          &kp PG_UP                            &kp N   &kp M              &kp COMMA    &kp DOT          &kp FSLH            &kp RSHFT
&mo 2      &kp GRAVE       &kp CAPS        &kp LEFT     &kp RIGHT                 &kp BSPC  &kp DEL    &kp END           &kp PG_DN      &kp ENTER  &kp SPACE          &kp UP             &kp DOWN     &kp LBKT         &kp RBKT            &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
